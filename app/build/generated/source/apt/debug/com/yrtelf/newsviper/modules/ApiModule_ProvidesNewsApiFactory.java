// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.yrtelf.newsviper.modules;

import com.yrtelf.newsviper.model.api.NewsApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ApiModule_ProvidesNewsApiFactory implements Factory<NewsApi> {
  private final ApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ApiModule_ProvidesNewsApiFactory(ApiModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public NewsApi get() {
    return Preconditions.checkNotNull(
        module.providesNewsApi(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NewsApi> create(ApiModule module, Provider<Retrofit> retrofitProvider) {
    return new ApiModule_ProvidesNewsApiFactory(module, retrofitProvider);
  }
}
