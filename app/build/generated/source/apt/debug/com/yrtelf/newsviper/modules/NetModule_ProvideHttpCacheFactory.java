// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.yrtelf.newsviper.modules;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

public final class NetModule_ProvideHttpCacheFactory implements Factory<Cache> {
  private final NetModule module;

  private final Provider<Application> appProvider;

  public NetModule_ProvideHttpCacheFactory(NetModule module, Provider<Application> appProvider) {
    assert module != null;
    this.module = module;
    assert appProvider != null;
    this.appProvider = appProvider;
  }

  @Override
  public Cache get() {
    return Preconditions.checkNotNull(
        module.provideHttpCache(appProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Cache> create(NetModule module, Provider<Application> appProvider) {
    return new NetModule_ProvideHttpCacheFactory(module, appProvider);
  }
}
