// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.yrtelf.newsviper.base;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class BasePresenter_MembersInjector<V extends IView, I extends BaseInteractor>
    implements MembersInjector<BasePresenter<V, I>> {
  private final Provider<I> interactorProvider;

  public BasePresenter_MembersInjector(Provider<I> interactorProvider) {
    assert interactorProvider != null;
    this.interactorProvider = interactorProvider;
  }

  public static <V extends IView, I extends BaseInteractor>
      MembersInjector<BasePresenter<V, I>> create(Provider<I> interactorProvider) {
    return new BasePresenter_MembersInjector<V, I>(interactorProvider);
  }

  @Override
  public void injectMembers(BasePresenter<V, I> instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.interactor = interactorProvider.get();
  }

  public static <V extends IView, I extends BaseInteractor> void injectInteractor(
      BasePresenter<V, I> instance, Provider<I> interactorProvider) {
    instance.interactor = interactorProvider.get();
  }
}
